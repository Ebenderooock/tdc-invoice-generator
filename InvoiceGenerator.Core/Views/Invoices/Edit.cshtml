@using TDC_Invoice_Generator.Helper
@using TDC_Invoice_Generator.ViewModels.Invoices
@model TDC_Invoice_Generator.ViewModels.Invoices.EditInvoiceViewModel
@{
    ViewBag.Title = "Invoice Edit";
    ViewBag.Name = "Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    @Styles.Render("~/css/flatpickr")
    @Styles.Render("~/css/tagify")
    @Styles.Render("~/css/select2")
}

@{
    int itemCount = 0;
}
<div class="row">
    <div class="col-12 mt-3">
        <div class="card">
            <div class="card-content">
                <div class="card-body">
                    @using (Html.BeginForm("Edit", "Invoices", FormMethod.Post, new { id = "EditInvoiceForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        <div class="row">
                            <div class="col-12">
                                <div class="form-row">
                                    <div class="form-group col-lg-6 col-md-12 col-sm-12">
                                        @Html.LabelFor(model => model.ClientId)
                                        @Html.DropDownListFor(c => c.ClientId, new SelectList(Model.Clients, "Id", "Name"), "Select Client", new { @class = "form-control select-to-select2" })
                                        @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-lg-6 col-md-12 col-sm-12">
                                        @Html.LabelFor(model => model.InvoiceDate)
                                        @Html.TextBoxFor(model => model.InvoiceDate, "{0:yyyy-MM-dd}", new { @class = "form-control datePicker", type = "date", placeholder = "-- Select a date --" })
                                        @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-lg-6 col-md-12 col-sm-12">
                                        @Html.LabelFor(model => model.PoNumber)
                                        @Html.EditorFor(model => model.PoNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "P/O NUmber" } })
                                        @Html.ValidationMessageFor(model => model.PoNumber, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-lg-6 col-md-12 col-sm-12">
                                        @Html.LabelFor(model => model.GeneralWaybillNumber)
                                        @Html.EditorFor(model => model.GeneralWaybillNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.GeneralWaybillNumber, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-lg-6 col-md-12 col-sm-12">
                                        @Html.LabelFor(model => model.BranchCode)
                                        @Html.DropDownListFor(c => c.BranchCode, new SelectList(Model.Branches, "Code", "Name"), "Select Branch", new { @class = "form-control select-to-select2" })
                                        @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-lg-6 col-md-12 col-sm-12">
                                        @Html.LabelFor(model => model.Status)
                                        @Html.DropDownList("Status", (IEnumerable<SelectListItem>)Model.StatusItems.Select(x => new SelectListItem { Text = x.Text, Value = x.Value, Selected = x.Selected }), new { @class = "form-control select-to-select2" })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-lg-6 col-md-12 col-sm-12">
                                        @Html.LabelFor(model => model.TransporterId)
                                        @Html.DropDownListFor(c => c.TransporterId, new SelectList(Model.Transporters, "Id", "Name"), "Select Transporter", new { @class = "form-control select-to-select2" })
                                        @Html.ValidationMessageFor(model => model.TransporterId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-lg-6 col-md-12 col-sm-12">
                                        @Html.LabelFor(model => model.TransporterPoNumber)
                                        @Html.EditorFor(model => model.TransporterPoNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Transporter P/O NUmber" } })
                                        @Html.ValidationMessageFor(model => model.TransporterPoNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 mt-5">
                                <div class="row clearfix">
                                    <div class="col-md-12 mb-3">
                                        <button type="button" id="add_row" class="btn btn-default add-row-btn float-right">Add Row</button>
                                    </div>
                                </div>
                                <table class="table table-bordered table-striped" id="tab_logic">
                                    <thead>
                                    <tr>
                                        <th class="text-center">Product</th>
                                        <th class="text-center">Qty</th>
                                        <th class="text-center">Unit Size</th>
                                        <th class="text-center">Total Kg</th>
                                        <th class="text-center">Total Pallets</th>
                                        <th class="text-center">Batch Numbers</th>
                                        <th class="text-center"></th>
                                    </tr>
                                    </thead>
                                    <tbody id="invoiceBody">
                                    @foreach (EditInvoiceItemViewModel item in Model.OldInvoiceItems)
                                    {
                                        <tr class="indexBlock">
                                            <td width="30%">
                                                <select class="select-to-select2 validateItem reorder" name="InvoiceItems[@itemCount].ProductId" style="width: 100%">
                                                    @foreach (EditInvoiceViewModelProductList product in Model.Products)
                                                    {
                                                        <option value="@product.Id" @(product.Id == item.ProductId ? "selected" : "")>@product.Name | @product.Code</option>
                                                    }
                                                </select>
                                            </td>
                                            <td>
                                                <input type="number" min="0" name="InvoiceItems[@itemCount].Quantity" placeholder="Qty" class="form-control reorder calculateKg quantity" value="@item.Quantity"/>
                                            </td>
                                            <td>
                                                <input type="number" min="0" name="InvoiceItems[@itemCount].UnitSize" placeholder="Unit Size" class="form-control reorder calculateKg unitSize" value="@item.UnitSize"/>
                                            </td>
                                            <td>
                                                <input type="number" min="0" name="InvoiceItems[@itemCount].TotalKg" placeholder="Total Kg" class="form-control reorder totalKg" value="@item.TotalKg" readonly/>
                                            </td>
                                            <td>
                                                <input type="text" name="InvoiceItems[@itemCount].Pallets" placeholder="Total Pallets" class="form-control reorder" value="@item.Pallets"/>
                                            </td>
                                            <td>
                                                <input pattern="[0-9]+" name="InvoiceItems[@itemCount].BatchNumbers" placeholder="Batch Numbers" value="@item.BatchNumbers" class="tags reorder">
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-danger btn_remove delete_row">X</button>
                                            </td>
                                        </tr>

                                        itemCount++;
                                    }
                                    </tbody>
                                </table>
                            </div>
                            @Html.HiddenFor(model => model.SaveAndDownload)
                            <div class="col-12 mt-4">
                                <button type="submit" class="btn btn-primary" onclick="onSaveAndDownloadClicked(false);" id="FormSubmit"><i class="far fa-save"></i> Save</button>
                                <button type="submit" class="btn btn-secondary" onclick="onSaveAndDownloadClicked(true);" id="FormSubmitDownload"><i class="fas fa-file-download"></i> Save and Download</button>
                                <button type="button" id="add_row_bottom" class="btn btn-default add-row-btn float-right">Add Row</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @NoCacheScripts.Render("~/bundles/jqueryval")
    @NoCacheScripts.Render("~/js/flatpickr")
    @NoCacheScripts.Render("~/js/tagify")
    @NoCacheScripts.Render("~/js/select2")
    @NoCacheScripts.Render("~/js/invoices/edit")
}