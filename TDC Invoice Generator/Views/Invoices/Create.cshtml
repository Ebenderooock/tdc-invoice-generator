@using TDC_Invoice_Generator.Helper
@model TDC_Invoice_Generator.ViewModels.Invoices.CreateInvoiceViewModel
@{
    ViewBag.Title = "Create New Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles {
    @Styles.Render("~/css/flatpickr")
    @Styles.Render("~/css/tagify")
    @Styles.Render("~/css/select2")
}
<div class="row">
    <div class="col-12 mt-3">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm("Create", "Invoices", FormMethod.Post, new { id = "CreateInvoicesForm", role = "form", @class = "needs-validation" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="form-group col-lg-6 col-md-12 col-sm-12">
                            @Html.LabelFor(model => model.ClientId)
                            @Html.DropDownListFor(c => c.ClientId, new SelectList(Model.Clients, "Id", "Name"), "Select Client", new { @class = "form-control select-to-select2" })
                            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6 col-md-12 col-sm-12">
                            @Html.LabelFor(model => model.InvoiceDate)
                            @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control datePicker" } })
                            @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                        </div>                        
                        <div class="form-group col-lg-12 col-md-12 col-sm-12">
                            @Html.LabelFor(model => model.PoNumber)
                            @Html.EditorFor(model => model.PoNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "P/O NUmber" } })
                            @Html.ValidationMessageFor(model => model.PoNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6 col-md-12 col-sm-12">
                            @Html.LabelFor(model => model.BranchCode)
                            @Html.DropDownListFor(c => c.BranchCode, new SelectList(Model.Branches, "Code", "Name"), "Select Branch", new { @class = "form-control select-to-select2" })
                            @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6 col-md-12 col-sm-12">
                            @Html.LabelFor(model => model.Status)
                            @Html.DropDownList("Status", (IEnumerable<SelectListItem>)Model.StatusItems, new { @class = "form-control select-to-select2" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6 col-md-12 col-sm-12">
                            @Html.LabelFor(model => model.TransporterId)
                            @Html.DropDownListFor(c => c.TransporterId, new SelectList(Model.Transporters, "Id", "Name"), "Select Transporter", new { @class = "form-control select-to-select2" })
                            @Html.ValidationMessageFor(model => model.TransporterId, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6 col-md-12 col-sm-12">
                            @Html.LabelFor(model => model.TransporterPoNumber)
                            @Html.EditorFor(model => model.TransporterPoNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Transporter P/O NUmber" } })
                            @Html.ValidationMessageFor(model => model.TransporterPoNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-12 mt-5">
                            <div class="row clearfix">
                                <div class="col-md-12 mb-3">
                                    <button type="button" id="add_row" class="btn btn-default add-row-btn float-right">Add Row</button>
                                </div>
                            </div>
                            <table class="table table-bordered table-striped" id="tab_logic">
                                <thead>
                                <tr>
                                    <th class="text-center">Product</th>
                                    <th class="text-center">Qty</th>
                                    <th class="text-center">Unit Size</th>
                                    <th class="text-center">Total Kg</th>
                                    <th class="text-center">Total Pallets</th>
                                    <th class="text-center">Batch Numbers</th>
                                    <th class="text-center"></th>
                                </tr>
                                </thead>
                                <tbody id="invoiceBody">
                                <tr class="indexBlock">
                                    <td width="30%">
                                        <select class="select-to-select2 validateItem tabbable-input" name="InvoiceItems[0].ProductId" id="firstSelect" style="width: 100%"><option value="" disabled selected>Select Product</option></select>
                                    </td>
                                    <td><input type="number" min="0" name="InvoiceItems[0].Quantity" placeholder="Qty" class="form-control calculateKg quantity tabbable-input" /></td>
                                    <td><input type="number" min="0" name="InvoiceItems[0].UnitSize" placeholder="Unit Size" class="form-control calculateKg unitSize tabbable-input"/></td>
                                    <td><input type="number" min="0" name="InvoiceItems[0].TotalKg" placeholder="Total Kg" class="form-control totalKg tabbable-input" readonly /></td>
                                    <td><input type="text" name="InvoiceItems[0].Pallets" placeholder="Total Pallets" class="form-control tabbable-input" /></td>
                                    <td>
                                        <input pattern="[0-9]+" tags="tags" name="InvoiceItems[0].BatchNumbers" placeholder="Batch Numbers" value="" class="tags">
                                    </td>
                                    <td><button type="button" class="btn btn-danger btn_remove delete_row">X</button></td>
                                </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.SaveAndDownload)
                    <div class="row">
                        <div class="col-12 mt-4">
                            <button type="submit" class="btn btn-primary" onclick="onSaveAndDownloadClicked(false);" id="FormSubmit"><i class="far fa-save"></i> Save</button>
                            <button type="submit" class="btn btn-secondary" onclick="onSaveAndDownloadClicked(true);" id="FormSubmitDownload"><i class="fas fa-file-download"></i> Save and Download</button>
                            <button type="button" id="add_row_bottom" class="btn btn-default add-row-btn float-right">Add Row</button>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</div>

@section scripts {
    @NoCacheScripts.Render("~/bundles/jqueryval")
    @NoCacheScripts.Render("~/js/flatpickr")
    @NoCacheScripts.Render("~/js/tagify")
    @NoCacheScripts.Render("~/js/select2")
    @NoCacheScripts.Render("~/js/invoices/create")
}
